"""
План:
1. Списки (дополним инфу)
2. Циклы For (продолжение) и While
3. Оператор if - else
"""

# Вспомним что такое список:
my_list = [1, 2, 3, 4, "string", -1, 1.5, "asd", 1, 2, 555, 67]
print(my_list[4])  # индексация идет с нуля

# Вспомним что такое цикл For:
for i in range(9):  # В данном случае это список из 9 элементов от 0 до 8
    print(i)

# Как вычислить длину списка (количество элементов в списке)
print("Длина списка my_list:", len(my_list))  # len = length (перевод как длина)

# Итерироваться по списку - значит последовательно проходить по всем его значениям в цикле.
# Итерироваться можно как по списку, так и по индексам элементов этого списка.
for element in my_list:  # итерируемся по списку range
    print("Элемент:", element)

# len(my_list) = 7 -> range(len(my_list)) = range(7) = [0, 1, ..., 6]
for index in range(len(my_list)):
    print("Элемент:", my_list[index])  # обращаемся к каждому элементу по индексу

# Цикл While
# While - переводится как "пока" что-то делай что-то.
# В while должно стоять какое-то условие

a = 5
b = 0
print("Изучаем цикл while")
while a == b:  # пока a > b -> будет выполнятся то, что ниже
    b += 1  # то же самое, что b = b + 1
    print("b = ", b, "Условие a == b:", a == b)

print("Теперь a =", a, "b =", b)

# Оператор if - else
# if - если, else - иначе
a = 5
b = 5
print("Изучаем if - else")
if a > b:
    print("а больше б")
else: 
    print("другое любое условие")

# Как это применить:
a = 5

# Пусть мы хотим остановить цикл когда a == b 
for b in range(10):
    if a == b:
        break  # break - это конец цикла. Тут код выходит из For 
    else:
        print("b сейчас = ", b)

print("Когда мы вышли из for, a =", a, ", b = ", b)

a = 5
b = 0
# Пусть мы хотим остановить цикл когда a == b 
while True:  # бесконечный цикл
    if a == b:
        break  # break - это конец цикла. Тут код выходит из while
    else:
        print("b сейчас = ", b)
        b += 1

print("Когда мы вышли из while, a =", a, ", b = ", b)